local OrionLib =
    loadstring(game:HttpGet(("https://raw.githubusercontent.com/Ara-kii/AraKiScriptMe/main/OrionLibMovable")))()
local Window =
    OrionLib:MakeWindow(
    {
        Name = "FernHUBðŸŒ¿",
        HidePremium = true,
        SaveConfig = true,
        ConfigFolder = "FernHub",
        IntroText = "Welcome to FernHUBðŸŒ¿"
    }
)

local Tab =
    Window:MakeTab(
    {
        Name = "Information",
        Icon = "rbxassetid://17586572991",
        PremiumOnly = false
    }
)

Tab:AddParagraph(
    "ARAKiBLOX presents...",
    "FernHUBðŸŒ¿ A script that enhances your gaming with essential features, making gameplay smoother."
)
local Section =
    Tab:AddSection(
    {
        Name = "Contact me via"
    }
)

Tab:AddParagraph("Youtube Channel", "ARAKiBLOX")

Tab:AddButton(
    {
        Name = "Youtube Channel Link",
        Callback = function()
            setclipboard("https://www.youtube.com/channel/UCXSdxhlSs_Ct0J7Ll-qCpNg")
        end
    }
)

Tab:AddParagraph("Discord", "@araa.ki")
local Tab =
    Window:MakeTab(
    {
        Name = "AutoFarm",
        Icon = "rbxassetid://17586593789",
        PremiumOnly = false
    }
)

local Section =
    Tab:AddSection(
    {
        Name = "Features"
    }
)

Tab:AddToggle(
    {
        Name = "Auto Area",
        Default = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

Tab:AddToggle(
    {
        Name = "Auto Rank",
        Default = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

Tab:AddToggle(
    {
        Name = "Auto Farm Coin",
        Default = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

Tab:AddToggle(
    {
        Name = "Auto Farm Gems",
        Default = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

local Section =
    Tab:AddSection(
    {
        Name = "More Features"
    }
)

Tab:AddToggle(
    {
        Name = "Auto Shiny Relic",
        Default = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

local Tab =
    Window:MakeTab(
    {
        Name = "Hatch Egg",
        Icon = "rbxassetid://17586625014",
        PremiumOnly = false
    }
)

Tab:AddParagraph("Caution", "Make you have an sufficient amount of coins")
Tab:AddParagraph("Guide", "Start by hatch an egg, then unleash its potential with the 'Fast Hatch' toggle")
Tab:AddToggle(
    {
        Name = "Fast Hatching",
        Default = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

Tab:AddToggle(
    {
        Name = "Auto Hatch",
        Default = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

Tab:AddToggle(
    {
        Name = "Remove Egg Animation",
        Default = false,
        Callback = function(Value)
            print(Value)
        end
    }
)
local Tab =
    Window:MakeTab(
    {
        Name = "MiniGames",
        Icon = "rbxassetid://17586648839",
        PremiumOnly = false
    }
)
Tab:AddParagraph("Guide", "Be sure to enter the area before activating it.")
local Section =
    Tab:AddSection(
    {
        Name = "Fishing"
    }
)

Tab:AddToggle(
    {
        Name = "Fast Fishing",
        Default = false,
        Callback = function(Value)
            print(Value)
        end
    }
)
local Section =
    Tab:AddSection(
    {
        Name = "Digging"
    }
)

Tab:AddToggle(
    {
        Name = "Fast Digging",
        Default = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

local Tab =
    Window:MakeTab(
    {
        Name = "Glitch Item",
        Icon = "rbxassetid://17586674425",
        PremiumOnly = false
    }
)
Tab:AddParagraph(
    "Guide",
    "You need to input the name of the item. Once you've entered the name, toggle 'DUPE' and wait for 30 seconds"
)
Tab:AddTextbox(
    {
        Name = "Glitch Item",
        Default = "Glitch Item",
        TextDisappear = false,
        Callback = function(Value)
            print(Value)
        end
    }
)
Tab:AddToggle(
    {
        Name = "Start Duping",
        Default = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

local Tab =
    Window:MakeTab(
    {
        Name = "Dupe Mail",
        Icon = "rbxassetid://17586608031",
        PremiumOnly = false
    }
)

Tab:AddParagraph(
    "Note",
    "Ensure that you have two distinct accounts, and run this script on the account containing pets (exclusive or huge pets only). Once you've entered the alternate username, click 'Start Duping' and patiently wait for 30 seconds."
)
Tab:AddParagraph("Caution", "It only functions for huge, exclusive, and gems")
Tab:AddTextbox(
    {
        Name = "Username",
        Default = "Input",
        TextDisappear = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

local Tab =
    Window:MakeTab(
    {
        Name = "Gem Dupe",
        Icon = "rbxassetid://17586779012",
        PremiumOnly = false
    }
)

Tab:AddParagraph("Guide", "Ensure to input the correct amount of gems.")

Tab:AddTextbox(
    {
        Name = "Current Gems",
        Default = "Amount",
        TextDisappear = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

Tab:AddButton(
    {
        Name = "Start Duping",
        Callback = function()
            local lib = require(game:GetService("ReplicatedStorage").Library)
            local old
            old =
                hookmetamethod(
                game,
                "__namecall",
                function(self, ...)
                    local args = {...}
                    if tostring(self) == "Mailbox: Send" and getnamecallmethod() == "InvokeServer" then
                        args[5] = 10000
                        print(unpack(args))
                    end
                    return old(self, unpack(args))
                end
            )

            local message = require(game.ReplicatedStorage.Library.Client.Message)
            message.Error("Gems Successfully Duped!!")
        end
    }
)

local Tab =
    Window:MakeTab(
    {
        Name = "Trade Scam",
        Icon = "rbxassetid://17316268316",
        PremiumOnly = false
    }
)

Tab:AddParagraph(
    "Guide",
    "To make this work, initiate a trade with another player and ensure to input their username. Once you've entered their username, activate the 'Freeze Lag' and 'Activate' simultaneously"
)
Tab:AddTextbox(
    {
        Name = "Victim Username",
        Default = "Input",
        TextDisappear = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

Tab:AddToggle(
    {
        Name = "Freezing Trade",
        Default = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

Tab:AddButton(
    {
        Name = "Launch",
        Default = false,
        Callback = function(Value)
            print(Value)

            wait(2)
            local message = require(game.ReplicatedStorage.Library.Client.Message)
            message.Error("TRADE SCAM ACTIVATEDâœ…")
        end
    }
)

local Tab =
    Window:MakeTab(
    {
        Name = "Huge Dupe",
        Icon = "rbxassetid://17586693431",
        PremiumOnly = false
    }
)
Tab:AddParagraph(
    "Guide",
    "This will only function with huges. If you run into any issues, make sure you have huges. If it still doesn't work, please leave a comment on my video."
)

Tab:AddTextbox(
    {
        Name = "Name of Huge",
        Default = "Input",
        TextDisappear = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

Tab:AddTextbox(
    {
        Name = "Dupe Amount",
        Default = "Input",
        TextDisappear = false,
        Callback = function(Value)
            print(Value)
        end
    }
)
Tab:AddButton(
    {
        Name = "Start Duping",
        Callback = function()
            local toggle = game.ReplicatedStorage:FindFirstChild("ToggleState")
            if not toggle then
                toggle = Instance.new("BoolValue")
                toggle.Name = "ToggleState"
                toggle.Value = false
                toggle.Parent = game.ReplicatedStorage
            end

            -- Function to swap pet details
            local function swapPets(fromPet, toPet)
                local lib = require(game.ReplicatedStorage.Library)
                for i, v in pairs(lib.Directory.Pets[fromPet]) do
                    lib.Directory.Pets[fromPet][i] = nil
                end
                for i, v in pairs(lib.Directory.Pets[toPet]) do
                    lib.Directory.Pets[fromPet][i] = v
                end
            end

            -- First set of pet swaps
            local function executeFirstSet()
                swapPets("Cat", "Huge Police Cat")
                swapPets("Corgi", "Huge Police Cat")
                swapPets("Butterfly", "Huge Police Cat")
                swapPets("Bunny", "Huge Police Cat")
                swapPets("Axolotl", "Huge Police Cat")
                swapPets("Dalmatian", "Huge Police Cat")
                swapPets("Chick", "Huge Police Cat")
                swapPets("Ducky", "Huge Police Cat")
                swapPets("Cow", "Huge Police Cat")
                swapPets("Chicken", "Huge Police Cat")
                swapPets("Elephant", "Huge Police Cat")
            end

            -- Second set of pet swaps
            local function executeSecondSet()
                swapPets("Cow", "Huge White Balloon Cat")
                swapPets("Flamingo", "Huge White Balloon Cat")
                swapPets("Ladybug", "Huge White Balloon Cat")
                swapPets("Ugly Duckling", "Huge White Balloon Cat")
                swapPets("Froggy", "Huge White Balloon Cat")
                swapPets("Umbrella Dog", "Huge White Balloon Cat")
                swapPets("Umbrella Cat", "Huge White Balloon Cat")
                swapPets("Platypus", "Huge White Balloon Cat")
                swapPets("Firefly", "Huge White Balloon Cat")
                swapPets("Dragon", "Huge White Balloon Cat")
            end

            -- Check the toggle state and execute the appropriate block
            if toggle.Value == false then
                -- First set of pets
                executeFirstSet()
                toggle.Value = true
            else
                -- Second set of pets
                executeSecondSet()
                toggle.Value = false
            end

            wait(2)
            local message = require(game.ReplicatedStorage.Library.Client.Message)
            message.Error("DUPE SUCCESSFUL!!")
        end
    }
)

local Tab =
    Window:MakeTab(
    {
        Name = "Titanic Dupe",
        Icon = "rbxassetid://17586710404",
        PremiumOnly = false
    }
)
Tab:AddParagraph(
    "Guide",
    "Ensure you have input the correct Titanic name, if you encounter any bugs, contact me on Discord."
)

Tab:AddTextbox(
    {
        Name = "Name of Titanic",
        Default = "Input",
        TextDisappear = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

Tab:AddTextbox(
    {
        Name = "Dupe Amount",
        Default = "Input",
        TextDisappear = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

Tab:AddButton(
    {
        Name = "Start Duping",
        Callback = function()
            -- Ensure you have a BooleanValue in ReplicatedStorage to keep track of the toggle state
            local toggle = game.ReplicatedStorage:FindFirstChild("ToggleState")
            if not toggle then
                toggle = Instance.new("BoolValue")
                toggle.Name = "ToggleState"
                toggle.Value = false
                toggle.Parent = game.ReplicatedStorage
            end

            -- Function to swap pet details
            local function swapPets(fromPet, toPet)
                local lib = require(game.ReplicatedStorage.Library)
                for i, v in pairs(lib.Directory.Pets[fromPet]) do
                    lib.Directory.Pets[fromPet][i] = nil
                end
                for i, v in pairs(lib.Directory.Pets[toPet]) do
                    lib.Directory.Pets[fromPet][i] = v
                end
            end

            -- Check the toggle state and execute the appropriate block
            if toggle.Value == false then
                -- First set of pets
                swapPets("Cat", "Titanic Stargazing Bull")
                toggle.Value = true
            else
                -- Second set of pets
                swapPets("Corgi", "Titanic Bejeweled Griffin")
                toggle.Value = false
            end

            wait(2)
            local message = require(game.ReplicatedStorage.Library.Client.Message)
            message.Error("TITANIC DUPE SUCCESSFULLY!!!")
        end
    }
)

local Tab =
    Window:MakeTab(
    {
        Name = "Huge Spawner",
        Icon = "rbxassetid://17586729056",
        PremiumOnly = false
    }
)

Tab:AddParagraph("Guide", "Make Sure You Type The Name Of Huge Correctly")

Tab:AddTextbox(
    {
        Name = "Name Of Huge",
        Default = "Input",
        TextDisappear = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

Tab:AddButton(
    {
        Name = "Spawning Start",
        Callback = function()
            -- Ensure you have a BooleanValue in ReplicatedStorage to keep track of the toggle state
            local toggle = game.ReplicatedStorage:FindFirstChild("ToggleState")
            if not toggle then
                toggle = Instance.new("BoolValue")
                toggle.Name = "ToggleState"
                toggle.Value = false
                toggle.Parent = game.ReplicatedStorage
            end

            -- Function to swap pet details
            local function swapPets(fromPet, toPet)
                local lib = require(game.ReplicatedStorage.Library)
                for i, v in pairs(lib.Directory.Pets[fromPet]) do
                    lib.Directory.Pets[fromPet][i] = nil
                end
                for i, v in pairs(lib.Directory.Pets[toPet]) do
                    lib.Directory.Pets[fromPet][i] = v
                end
            end

            -- Check the toggle state and execute the appropriate block
            if toggle.Value == false then
                -- First set of pets
                swapPets("Dog", "Huge Police Cat")
            else
                -- Second set of pets
                swapPets("Cat", "Huge Bejeweled Lion")
                toggle.Value = false
            end

            wait(2)
            local message = require(game.ReplicatedStorage.Library.Client.Message)
            message.Error("HUGE SUCCESSFULLY SPAWN!")
        end
    }
)

local Tab =
    Window:MakeTab(
    {
        Name = "Titanic Spawner",
        Icon = "rbxassetid://17586741647",
        PremiumOnly = false
    }
)

Tab:AddParagraph("Guide", "Input The Name Of Titanic Correctly To Avoid Mistake")

Tab:AddTextbox(
    {
        Name = "Name Of Titanic",
        Default = "Input",
        TextDisappear = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

Tab:AddButton(
    {
        Name = "Start Spawning",
        Callback = function()
            -- Ensure you have a BooleanValue in ReplicatedStorage to keep track of the toggle state
            local toggle = game.ReplicatedStorage:FindFirstChild("ToggleState")
            if not toggle then
                toggle = Instance.new("BoolValue")
                toggle.Name = "ToggleState"
                toggle.Value = false
                toggle.Parent = game.ReplicatedStorage
            end

            -- Function to swap pet details
            local function swapPets(fromPet, toPet)
                local lib = require(game.ReplicatedStorage.Library)
                for i, v in pairs(lib.Directory.Pets[fromPet]) do
                    lib.Directory.Pets[fromPet][i] = nil
                end
                for i, v in pairs(lib.Directory.Pets[toPet]) do
                    lib.Directory.Pets[fromPet][i] = v
                end
            end

            -- Check the toggle state and execute the appropriate block
            if toggle.Value == false then
                -- First set of pets
                swapPets("Dog", "Titanic Stargazing Bull")
                toggle.Value = true
            else
                -- Second set of pets
                swapPets("Corgi", "Titanic Sketch Cat")
                toggle.Value = false
            end

            wait(2)
            local message = require(game.ReplicatedStorage.Library.Client.Message)
            message.Error("TITANIC SPAWN SUCCESSFULLY!!!")
        end
    }
)

local Tab =
    Window:MakeTab(
    {
        Name = "Pet Changer",
        Icon = "rbxassetid://17586767687",
        PremiumOnly = false
    }
)

Tab:AddParagraph("Guide", "Make Sure You Type The Name Of Pet Correctly In FromPet And Topet To avoid mistaken")

Tab:AddTextbox(
    {
        Name = "Local From Pet",
        Default = "Input",
        TextDisappear = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

Tab:AddTextbox(
    {
        Name = "Local To Pet",
        Default = "Input",
        TextDisappear = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

Tab:AddButton(
    {
        Name = "Start Changing",
        Callback = function()
            -- Ensure you have an IntValue in ReplicatedStorage to keep track of the toggle state
            local toggle = game.ReplicatedStorage:FindFirstChild("ToggleState")
            if not toggle then
                toggle = Instance.new("IntValue")
                toggle.Name = "ToggleState"
                toggle.Value = 0
                toggle.Parent = game.ReplicatedStorage
            end

            -- Function to swap pet details
            local function swapPets(fromPet, toPet)
                local lib = require(game.ReplicatedStorage.Library)
                for i, v in pairs(lib.Directory.Pets[fromPet]) do
                    lib.Directory.Pets[fromPet][i] = nil
                end
                for i, v in pairs(lib.Directory.Pets[toPet]) do
                    lib.Directory.Pets[fromPet][i] = v
                end
            end

            -- Check the toggle state and execute the appropriate block
            if toggle.Value == 0 then
                -- First set of pets
                swapPets("Cat", "Titanic Bejeweled Griffin")
                toggle.Value = 1
            elseif toggle.Value == 1 then
                -- Second set of pets
                swapPets("Corgi", "Titanic Sketch Cat")
                toggle.Value = 2
            elseif toggle.Value == 2 then
                -- Third set of pets
                local lib = require(game.ReplicatedStorage.Library)
                local fromPet = "Dog"
                local toPet = "Huge Atomic Axolotl"

                for i, v in pairs(lib.Directory.Pets[fromPet]) do
                    lib.Directory.Pets[fromPet][i] = nil
                end
                for i, v in pairs(lib.Directory.Pets[toPet]) do
                    lib.Directory.Pets[fromPet][i] = v
                end
                toggle.Value = 0 -- Reset the counter to cycle back
            end

            wait(2)
            local message = require(game.ReplicatedStorage.Library.Client.Message)
            message.Error("Pet Change Successfully!!!")
        end
    }
)

local Tab =
    Window:MakeTab(
    {
        Name = "Misc",
        Icon = "rbxassetid://17586795822",
        PremiumOnly = false
    }
)

Tab:AddButton(
    {
        Name = "FPS Booster",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Ara-kii/AraKiScriptMe/main/FpsBooster"))()
        end
    }
)

Tab:AddButton(
    {
        Name = "Server Hop",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Ara-kii/AraKiScriptMe/main/ServerHopByARAKi"))()
        end
    }
)

Tab:AddTextbox(
    {
        Name = "Webhook",
        Default = "Input",
        TextDisappear = false,
        Callback = function(Value)
            print(Value)
        end
    }
)

OrionLib:Init()
